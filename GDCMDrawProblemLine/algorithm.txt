遍历repairedByStatus，如果当前点的轮廓是i，并且前一个点的轮廓也是i，且两者均为true，则继续读下一个点，直到下一个点的轮廓是i+1或者下一个点为false时停止。如果条件不满足，则继续读下一个点，直到满足条件，或者遍历结束。

当因为false而停止时，当前遍历就找到了起始点和终点。那么需要删掉他们之间的点，并且添加直线上的点。结束。


――
数学化：
所有点都有一个连接性标记，int i，默认为0，当它为true时，赋值为1，且标注为跳变点。
循环，当它为true，且前向为true，且同一轮廓时，它的值为当前值加上前项的值。若其后项为false或者不同轮廓，则标注为跳变点。

循环，当一个点是跳变点且其值为1，后项i>1时，为起点。
当一个点是跳变点且其值为>1，且前项>1时，为终点。

括号匹配算法。找到匹配的起点终点。删除并连线。


